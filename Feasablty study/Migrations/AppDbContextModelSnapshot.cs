// <auto-generated />
using System;
using Feasablty_study.Infrastructure.Data;
using Feasablty_study.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Feasablty_study.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Feasablty_study.Models.Competitors", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AmounrAdded")
                        .HasColumnType("int");

                    b.Property<string>("CompetitorsName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("CompetitorsPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("MarketStudyId")
                        .HasColumnType("int");

                    b.Property<string>("Products")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("market_StudyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("market_StudyId");

                    b.ToTable("Competitors");
                });

            modelBuilder.Entity("Feasablty_study.Models.Construction_and_buliding", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BuildingType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("SendPrivateSender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TechnicalStudyId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("technical_StudyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("technical_StudyId");

                    b.ToTable("Construction_and_buliding");
                });

            modelBuilder.Entity("Feasablty_study.Models.Establishment_expenses", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PriceOfExpens")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TechnicalStudyId")
                        .HasColumnType("int");

                    b.Property<string>("TypeOfExpense")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("technical_StudyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("technical_StudyId");

                    b.ToTable("Establishment_expenses");
                });

            modelBuilder.Entity("Feasablty_study.Models.Expected_revenue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MarketStudyId")
                        .HasColumnType("int");

                    b.Property<int>("MonthlyQusntity")
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("ProductPrice")
                        .HasColumnType("real");

                    b.Property<int?>("market_StudyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("market_StudyId");

                    b.ToTable("Expected_revenue");
                });

            modelBuilder.Entity("Feasablty_study.Models.Feasibility_study", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContactNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectLogo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("ProjectType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Feasibility_studies");
                });

            modelBuilder.Entity("Feasablty_study.Models.Government_fees", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DrawingDomestic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameFees")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TechnicalStudyId")
                        .HasColumnType("int");

                    b.Property<int?>("technical_StudyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("technical_StudyId");

                    b.ToTable("Government_fees");
                });

            modelBuilder.Entity("Feasablty_study.Models.License", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LicenseType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Licenses")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PreliminaryStudyId")
                        .HasColumnType("int");

                    b.Property<int?>("preliminary_StudyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("preliminary_StudyId");

                    b.ToTable("License");
                });

            modelBuilder.Entity("Feasablty_study.Models.Machinery_Equipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NameEquipment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<int>("TechnicalStudyId")
                        .HasColumnType("int");

                    b.Property<float>("TotleAll")
                        .HasColumnType("real");

                    b.Property<int?>("technical_StudyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("technical_StudyId");

                    b.ToTable("Machinery_Equipment");
                });

            modelBuilder.Entity("Feasablty_study.Models.Manpower_workforce", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("JobTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("MonthlySalary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<int>("TechnicalStudyId")
                        .HasColumnType("int");

                    b.Property<int?>("technical_StudyId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("technical_StudyId");

                    b.ToTable("Manpower_workforce");
                });

            modelBuilder.Entity("Feasablty_study.Models.Market_study", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AvailbleOpportunity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompetitiveAdavantages")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FeasibilityStudyId")
                        .HasColumnType("int");

                    b.Property<string>("Logography")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PointsOfEwakness")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectLocationOnTheMap")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Threats")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WatermarkMarketd")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FeasibilityStudyId")
                        .IsUnique();

                    b.ToTable("Market_study");
                });

            modelBuilder.Entity("Feasablty_study.Models.Marketing_Activity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("MarketStudyId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("market_StudyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("market_StudyId");

                    b.ToTable("Marketing_Activity");
                });

            modelBuilder.Entity("Feasablty_study.Models.Preliminary_study", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CteristicsOfTheProjectArea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FactorsRepresentedOnIncreasedDemand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FactorsRepresentedOnLowDemand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FeasibilityStudyId")
                        .HasColumnType("int");

                    b.Property<string>("ProjectObjectives")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VisionOfTheProject")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FeasibilityStudyId")
                        .IsUnique();

                    b.ToTable("Preliminary_study");
                });

            modelBuilder.Entity("Feasablty_study.Models.Public_benefit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Benefit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("MonthlyCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TechnicalStudyId")
                        .HasColumnType("int");

                    b.Property<int?>("technical_StudyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("technical_StudyId");

                    b.ToTable("Public_benefit");
                });

            modelBuilder.Entity("Feasablty_study.Models.Raw_materials", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("PriceOfUnity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("QuantityRequiredMonthly")
                        .HasColumnType("int");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TechnicalStudyId")
                        .HasColumnType("int");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("technical_StudyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("technical_StudyId");

                    b.ToTable("Raw_materials");
                });

            modelBuilder.Entity("Feasablty_study.Models.Rentals", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LeaseType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RentQuantity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TechnicalStudyId")
                        .HasColumnType("int");

                    b.Property<int?>("technical_StudyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("technical_StudyId");

                    b.ToTable("Rentals");
                });

            modelBuilder.Entity("Feasablty_study.Models.Risk", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DangerReductionStyle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescriptionDangerReduece")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescriptionRisk")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MarketStudyId")
                        .HasColumnType("int");

                    b.Property<string>("TypeRisk")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("market_StudyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("market_StudyId");

                    b.ToTable("Risk");
                });

            modelBuilder.Entity("Feasablty_study.Models.Support_Messages", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("SupportMessages");
                });

            modelBuilder.Entity("Feasablty_study.Models.Technical_Study", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FeasibilityStudyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FeasibilityStudyId")
                        .IsUnique();

                    b.ToTable("Technical_Study");
                });

            modelBuilder.Entity("Feasablty_study.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordConfirm")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Feasablty_study.Models.Competitors", b =>
                {
                    b.HasOne("Feasablty_study.Models.Market_study", "market_Study")
                        .WithMany("competitors")
                        .HasForeignKey("market_StudyId");

                    b.Navigation("market_Study");
                });

            modelBuilder.Entity("Feasablty_study.Models.Construction_and_buliding", b =>
                {
                    b.HasOne("Feasablty_study.Models.Technical_Study", "technical_Study")
                        .WithMany("construction_And_Bulidings")
                        .HasForeignKey("technical_StudyId");

                    b.Navigation("technical_Study");
                });

            modelBuilder.Entity("Feasablty_study.Models.Establishment_expenses", b =>
                {
                    b.HasOne("Feasablty_study.Models.Technical_Study", "technical_Study")
                        .WithMany("establishment_Expenses")
                        .HasForeignKey("technical_StudyId");

                    b.Navigation("technical_Study");
                });

            modelBuilder.Entity("Feasablty_study.Models.Expected_revenue", b =>
                {
                    b.HasOne("Feasablty_study.Models.Market_study", "market_Study")
                        .WithMany("expected_Revenues")
                        .HasForeignKey("market_StudyId");

                    b.Navigation("market_Study");
                });

            modelBuilder.Entity("Feasablty_study.Models.Feasibility_study", b =>
                {
                    b.HasOne("Feasablty_study.Models.User", "user")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("Feasablty_study.Models.Government_fees", b =>
                {
                    b.HasOne("Feasablty_study.Models.Technical_Study", "technical_Study")
                        .WithMany("Government_Fees")
                        .HasForeignKey("technical_StudyId");

                    b.Navigation("technical_Study");
                });

            modelBuilder.Entity("Feasablty_study.Models.License", b =>
                {
                    b.HasOne("Feasablty_study.Models.Preliminary_study", "preliminary_Study")
                        .WithMany("licenses")
                        .HasForeignKey("preliminary_StudyId");

                    b.Navigation("preliminary_Study");
                });

            modelBuilder.Entity("Feasablty_study.Models.Machinery_Equipment", b =>
                {
                    b.HasOne("Feasablty_study.Models.Technical_Study", "technical_Study")
                        .WithMany("machinery_Equipment")
                        .HasForeignKey("technical_StudyId");

                    b.Navigation("technical_Study");
                });

            modelBuilder.Entity("Feasablty_study.Models.Manpower_workforce", b =>
                {
                    b.HasOne("Feasablty_study.Models.Technical_Study", "technical_Study")
                        .WithMany("Manpower_Workforces")
                        .HasForeignKey("technical_StudyId");

                    b.Navigation("technical_Study");
                });

            modelBuilder.Entity("Feasablty_study.Models.Market_study", b =>
                {
                    b.HasOne("Feasablty_study.Models.Feasibility_study", "feasibility_study")
                        .WithOne("market_Study")
                        .HasForeignKey("Feasablty_study.Models.Market_study", "FeasibilityStudyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("feasibility_study");
                });

            modelBuilder.Entity("Feasablty_study.Models.Marketing_Activity", b =>
                {
                    b.HasOne("Feasablty_study.Models.Market_study", "market_Study")
                        .WithMany("marketing_Activities")
                        .HasForeignKey("market_StudyId");

                    b.Navigation("market_Study");
                });

            modelBuilder.Entity("Feasablty_study.Models.Preliminary_study", b =>
                {
                    b.HasOne("Feasablty_study.Models.Feasibility_study", "feasibility_study")
                        .WithOne("Preliminary_study")
                        .HasForeignKey("Feasablty_study.Models.Preliminary_study", "FeasibilityStudyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("feasibility_study");
                });

            modelBuilder.Entity("Feasablty_study.Models.Public_benefit", b =>
                {
                    b.HasOne("Feasablty_study.Models.Technical_Study", "technical_Study")
                        .WithMany("public_Benefits")
                        .HasForeignKey("technical_StudyId");

                    b.Navigation("technical_Study");
                });

            modelBuilder.Entity("Feasablty_study.Models.Raw_materials", b =>
                {
                    b.HasOne("Feasablty_study.Models.Technical_Study", "technical_Study")
                        .WithMany("raw_Materials")
                        .HasForeignKey("technical_StudyId");

                    b.Navigation("technical_Study");
                });

            modelBuilder.Entity("Feasablty_study.Models.Rentals", b =>
                {
                    b.HasOne("Feasablty_study.Models.Technical_Study", "technical_Study")
                        .WithMany("rentals")
                        .HasForeignKey("technical_StudyId");

                    b.Navigation("technical_Study");
                });

            modelBuilder.Entity("Feasablty_study.Models.Risk", b =>
                {
                    b.HasOne("Feasablty_study.Models.Market_study", "market_Study")
                        .WithMany("risks")
                        .HasForeignKey("market_StudyId");

                    b.Navigation("market_Study");
                });

            modelBuilder.Entity("Feasablty_study.Models.Support_Messages", b =>
                {
                    b.HasOne("Feasablty_study.Models.User", "user")
                        .WithMany("messages")
                        .HasForeignKey("UserId");

                    b.Navigation("user");
                });

            modelBuilder.Entity("Feasablty_study.Models.Technical_Study", b =>
                {
                    b.HasOne("Feasablty_study.Models.Feasibility_study", "feasibility_study")
                        .WithOne("technical_Study")
                        .HasForeignKey("Feasablty_study.Models.Technical_Study", "FeasibilityStudyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("feasibility_study");
                });

            modelBuilder.Entity("Feasablty_study.Models.User", b =>
                {
                    b.HasOne("Feasablty_study.Models.User", null)
                        .WithMany("Users")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Feasablty_study.Models.Feasibility_study", b =>
                {
                    b.Navigation("market_Study");

                    b.Navigation("Preliminary_study");

                    b.Navigation("technical_Study");
                });

            modelBuilder.Entity("Feasablty_study.Models.Market_study", b =>
                {
                    b.Navigation("competitors");

                    b.Navigation("expected_Revenues");

                    b.Navigation("marketing_Activities");

                    b.Navigation("risks");
                });

            modelBuilder.Entity("Feasablty_study.Models.Preliminary_study", b =>
                {
                    b.Navigation("licenses");
                });

            modelBuilder.Entity("Feasablty_study.Models.Technical_Study", b =>
                {
                    b.Navigation("construction_And_Bulidings");

                    b.Navigation("establishment_Expenses");

                    b.Navigation("Government_Fees");

                    b.Navigation("machinery_Equipment");

                    b.Navigation("Manpower_Workforces");

                    b.Navigation("public_Benefits");

                    b.Navigation("raw_Materials");

                    b.Navigation("rentals");
                });

            modelBuilder.Entity("Feasablty_study.Models.User", b =>
                {
                    b.Navigation("messages");

                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
